{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\Spring\\\\onlineNoteApp\\\\noteui\\\\src\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  _s();\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const isDrawing = useRef(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 0.8;\n    canvas.height = window.innerHeight * 0.6;\n    const context = canvas.getContext('2d');\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    isDrawing.current = true;\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing.current) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n  const endDrawing = () => {\n    contextRef.current.closePath();\n    isDrawing.current = false;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"canvas\",\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: endDrawing,\n      onMouseOut: endDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Board, \"fhFuzR+RLo9RCS8X0QWZRt/60tk=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","canvasRef","contextRef","isDrawing","useEffect","canvas","current","width","window","innerWidth","height","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","draw","lineTo","stroke","endDrawing","closePath","children","className","ref","onMouseDown","onMouseMove","onMouseUp","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/Spring/onlineNoteApp/noteui/src/Board/Board.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport './Board.css';\r\nfunction Board() {\r\n    \r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n    const isDrawing = useRef(false);\r\n  \r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      canvas.width = window.innerWidth * 0.8;\r\n      canvas.height = window.innerHeight * 0.6;\r\n  \r\n      const context = canvas.getContext('2d');\r\n      context.lineCap = 'round';\r\n      context.strokeStyle = 'black';\r\n      context.lineWidth = 5;\r\n  \r\n      contextRef.current = context;\r\n    }, []);\r\n  \r\n    const startDrawing = ({ nativeEvent }) => {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(offsetX, offsetY);\r\n      isDrawing.current = true;\r\n    };\r\n  \r\n    const draw = ({ nativeEvent }) => {\r\n      if (!isDrawing.current) return;\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      contextRef.current.lineTo(offsetX, offsetY);\r\n      contextRef.current.stroke();\r\n    };\r\n  \r\n    const endDrawing = () => {\r\n      contextRef.current.closePath();\r\n      isDrawing.current = false;\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <canvas className='canvas'\r\n            ref={canvasRef}\r\n            onMouseDown={startDrawing}\r\n            onMouseMove={draw}\r\n            onMouseUp={endDrawing}\r\n            onMouseOut={endDrawing}\r\n            ></canvas>\r\n        </>\r\n    )\r\n}\r\nexport default Board;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACrB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMS,SAAS,GAAGT,MAAM,CAAC,KAAK,CAAC;EAE/BU,SAAS,CAAC,MAAM;IACd,MAAMC,MAAM,GAAGJ,SAAS,CAACK,OAAO;IAChCD,MAAM,CAACE,KAAK,GAAGC,MAAM,CAACC,UAAU,GAAG,GAAG;IACtCJ,MAAM,CAACK,MAAM,GAAGF,MAAM,CAACG,WAAW,GAAG,GAAG;IAExC,MAAMC,OAAO,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,OAAO,GAAG,OAAO;IACzBF,OAAO,CAACG,WAAW,GAAG,OAAO;IAC7BH,OAAO,CAACI,SAAS,GAAG,CAAC;IAErBd,UAAU,CAACI,OAAO,GAAGM,OAAO;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACxC,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxChB,UAAU,CAACI,OAAO,CAACe,SAAS,CAAC,CAAC;IAC9BnB,UAAU,CAACI,OAAO,CAACgB,MAAM,CAACH,OAAO,EAAEC,OAAO,CAAC;IAC3CjB,SAAS,CAACG,OAAO,GAAG,IAAI;EAC1B,CAAC;EAED,MAAMiB,IAAI,GAAGA,CAAC;IAAEL;EAAY,CAAC,KAAK;IAChC,IAAI,CAACf,SAAS,CAACG,OAAO,EAAE;IACxB,MAAM;MAAEa,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxChB,UAAU,CAACI,OAAO,CAACkB,MAAM,CAACL,OAAO,EAAEC,OAAO,CAAC;IAC3ClB,UAAU,CAACI,OAAO,CAACmB,MAAM,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBxB,UAAU,CAACI,OAAO,CAACqB,SAAS,CAAC,CAAC;IAC9BxB,SAAS,CAACG,OAAO,GAAG,KAAK;EAC3B,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACIhC,OAAA;MAAQiC,SAAS,EAAC,QAAQ;MAC1BC,GAAG,EAAE7B,SAAU;MACf8B,WAAW,EAAEd,YAAa;MAC1Be,WAAW,EAAET,IAAK;MAClBU,SAAS,EAAEP,UAAW;MACtBQ,UAAU,EAAER;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACZ,CAAC;AAEX;AAACtC,EAAA,CAjDQD,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAkDd,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}